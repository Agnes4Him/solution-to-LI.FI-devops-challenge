name: Task CI

on:
  workflow_dispatch:
  #push:
    #branches:
    #- 'main'

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: Build and push bird and birdImage APIs images
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push bird API
      uses: docker/build-push-action@v6
      with:
        context: ./apis/bird
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/bird-api:${{ env.IMAGE_TAG }}
    - name: Build and push birdImage API
      uses: docker/build-push-action@v6
      with:
        context: ./apis/birdImage
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/birdimage-api:${{ env.IMAGE_TAG }}

  deploy:
    name: Run Terraform and deploy APIs
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
          terraform_wrapper: false
    - name: Terraform plan
      id: tf-plan
      working-directory: 'infrastructures'
      run: |
          terraform init && terraform plan -var-file=vars/task.tfvars
    - name: Terraform Apply
      id: tf-apply
      working-directory: 'infrastructures'
      if: ${{ steps.tf-plan.outcome }} == 'success'
      run: |
          terraform apply -auto-approve -var-file=vars/task.tfvars